openapi: 3.0.0
info:
  version: 1.0.0
  title: Cadence13 Dashboard API

paths:
  /networks:
    get:
      summary: List all authorized networks
      operationId: cadence13.api.dashboard.network.get_networks
      tags:
        - networks
      responses:
        '200':
          description: An array of networks
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Network'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create a new network
      operationId: cadence13.api.dashboard.network.create_network
      tags:
        - networks
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /networks/{networkGuid}/podcasts:
    get:
      summary: List all podcasts in a network
      operationId: cadence13.api.dashboard.network.get_podcasts
      tags:
        - networks
        - podcasts
      parameters:
        - name: networkGuid
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /podcasts:
    get:
      summary: List all authorized podcasts
      operationId: cadence13.api.dashboard.podcast.get_podcasts
      tags:
        - podcasts
      responses:
        '200':
          description: A paged array of pets
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Podcast'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /podcasts/{podcastGuid}:
    get:
      summary: Gets a podcast
      operationId: cadence13.api.dashboard.podcast.get_podcast
      tags:
        - podcasts
      parameters:
        - name: podcastGuid
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/UUID'
      responses:
        '200':
          description: Detailed information for a podcast
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Podcast'

        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      summary: Update an existing podcast
      operationId: cadence13.api.dashboard.podcast.update_podcast
      tags:
        - podcasts
      parameters:
        - name: podcastGuid
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'


  /podcasts/{podcastGuid}/episodes:
    get:
      summary: List all episodes in a podcast
      operationId: cadence13.api.dashboard.podcast.get_episodes
      tags:
        - podcasts
        - episodes
      parameters:
        - name: podcastGuid
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/UUID'
      responses:
        '200':
          description: A paged array of episodes
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: '#/components/schemas/Episode'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /podcasts/{podcastGuid}/subscription-urls:
    get:
      operationId: cadence13.api.dashboard.podcast.get_subscription_urls
      tags:
        - podcasts
      parameters:
        - name: podcastGuid
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/UUID'
      responses:
        200:
          description: Array of podcast subscriptions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionUrls'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      operationId: cadence13.api.dashboard.podcast.patch_subscription_urls
      tags:
        - podcasts
      parameters:
        - name: podcastGuid
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionUrls'
      responses:
        200:
          description: Update successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionUrls'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /podcasts/{podcastGuid}/social-media-urls:
    get:
      operationId: cadence13.api.dashboard.podcast.get_social_media_urls
      tags:
        - podcasts
      parameters:
        - name: podcastGuid
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/UUID'
      responses:
        200:
          description: Social media URLs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SocialMediaUrls'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      operationId: cadence13.api.dashboard.podcast.patch_social_media_urls
      tags:
        - podcasts
      parameters:
        - name: podcastGuid
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/UUID'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SocialMediaUrls'
      responses:
        200:
          description: Social media URLs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SocialMediaUrls'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /podcasts/{podcastGuid}/staff:
    get:
      summary: Get a list of staffers associated with the podcast
      operationId: cadence13.api.dashboard.podcast.get_staff
      tags:
        - podcasts
        - staff
      parameters:
        - name: podcastGuid
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/UUID'
      responses:
        200:
          description: An array of staffers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Staffer'

    post:
      operationId: cadence13.api.dashboard.podcast.create_staffer
      tags:
        - podcasts
        - staff
      parameters:
        - name: podcastGuid
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /staffer/{stafferGuid}:
    patch:
      operationId: cadence13.api.dashboard.podcast.update_staffer
      tags:
        - staff
      parameters:
        - name: podcastGuid
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/UUID'
        - name: stafferGuid
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/UUID'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Staffer'
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      operationId: cadence13.api.dashboard.podcast.delete_staffer
      tags:
        - staff
      parameters:
        - name: podcastGuid
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/UUID'
        - name: stafferGuid
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /episodes/{episodeGuid}:
    patch:
      summary: Update an existing episode
      operationId: cadence13.api.dashboard.episode.update_episode
      tags:
        - episodes
      parameters:
        - name: episodeGuid
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/UUID'
      responses:
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    UUID:
      type: string
      pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'

    ImageUrls:
      properties:
        original:
          type: string

    Network:
      required:
        - guid
        - name
      properties:
        guid:
          $ref: '#/components/schemas/UUID'
        name:
          type: string

    SubscriptionUrls:
      properties:
        applePodcasts:
          type: string
          nullable: true
        googlePlay:
          type: string
          nullable: true
        googlePodcasts:
          type: string
          nullable: true
        stitcher:
          type: string
          nullable: true
        spotify:
          type: string
          nullable: true
        radioCom:
          type: string
          nullable: true
        iHeart:
          type: string
          nullable: true
        locked:
          type: array
          items:
            type: string
            enum:
              - applePodcasts
              - googlePlay
              - googlePodcasts
              - stitcher
              - spotify
              - radioCom
              - iHeart

    SocialMediaUrls:
      properties:
        facebook:
          type: string
          nullable: true
        pinterest:
          type: string
          nullable: true
        instagram:
          type: string
          nullable: true
        twitter:
          type: string
          nullable: true
        reddit:
          type: string
          nullable: true
        locked:
          type: array
          items:
            type: string
            enum:
              - facebook
              - pinterest
              - instagram
              - twitter
              - reddit

    Staffer:
      properties:
        guid:
          $ref: '#/components/schemas/UUID'
        role:
          type: string
        firstName:
          type: string
        middleName:
          type: string
          nullable: true
        lastName:
          type: string
        biography:
          type: string
        imageUrls:
          $ref: '#/components/schemas/ImageUrls'

    Podcast:
      properties:
        guid:
          $ref: '#/components/schemas/UUID'
        slug:
          type: string
        title:
          type: string
        subtitle:
          type: string
          nullable: true
        summary:
          type: string
        copyright:
          type: string
        author:
          type: string
        websiteUrl:
          type: string
        feedUrl:
          type: string
        imageUrls:
          $ref: '#/components/schemas/ImageUrls'
        ownerName:
          type: string
        ownerEmail:
          type: string
        podcastType:
          type: string
          enum:
            - EPISODIC
            - SERIAL
        isExplicit:
          type: boolean
        status:
          type: string
          enum:
            - ACTIVE
            - INACTIVE
        subscriptionUrls:
          $ref: '#/components/schemas/SubscriptionUrls'
        socialMediaUrls:
          $ref: '#/components/schemas/SocialMediaUrls'
        staff:
          type: array
          items:
            $ref: '#/components/schemas/Staffer'
        tags:
          type: array
          items:
            type: string
        categories:
          type: array
          items:
            type: string

    Episode:
      required:
        - guid
      properties:
        guid:
          $ref: "#/components/schemas/UUID"
        season_no:
          type: integer
          format: int32
        episode_no:
          type: integer
          format: int32
        title:
          type: string
        subtitle:
          type: string
        summary:
          type: string
        author:
          type: string
        episode_type:
          type: string
        image_url:
          type: string
        audio_url:
          type: string
        is_explicit:
          type: boolean
        published_at:
          type: string
          format: date-time
        status:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string